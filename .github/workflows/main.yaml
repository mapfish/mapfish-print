name: Continuous integration

on:
  push:
    branches:
      - master
      - '[0-9]+.[0-9]+'
    tags:
      - '*'
  pull_request:

permissions:
  packages: write
  actions: write
  contents: write

env:
  HAS_SECRETS: ${{ secrets.HAS_SECRETS }}

jobs:
  main:
    name: Continuous integration
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"

    steps:
      - uses: actions/checkout@v4

      - id: version
        run: echo "version=3.30.5" > $GITHUB_OUTPUT
      - name: Create Release
        uses: actions/github-script@v7
        with:
          script: |-
            const fs = require('fs');

            console.log('Creating release');
            const release = await github.request('POST /repos/{owner}/{repo}/releases', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: context.ref,
              name: 'test123',
              draft: true,
              prerelease: true,
              generate_release_notes: false,
              headers: {
                'X-GitHub-Api-Version': '2022-11-28'
              }
            });
            for (const archive of [
              //{prefix: 'print-servlet-', suffix: '.war', 'mime-type': 'application/java-archive'},
              //{prefix: 'print-cli-', suffix: '.zip', 'mime-type': 'application/zip'},
              {prefix: 'print-lib-', suffix: '.jar', 'mime-type': 'application/java-archive'},
              {prefix: 'print-lib-', suffix: '-sources.jar', 'mime-type': 'application/java-archive'},
              {prefix: 'print-lib-', suffix: '-javadoc.jar', 'mime-type': 'application/java-archive'}
            ]) {
              console.log('Uploading new-' + archive.prefix + '${{ steps.version.outputs.version }}' + archive.suffix);
              await github.request('POST /repos/{owner}/{repo}/releases/{release_id}/assets', {
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: release.data.id,
                name: 'new-' + archive.prefix + '${{ steps.version.outputs.version }}' + archive.suffix,
                # data: fs.readFileSync('./core/build/libs/' + archive.prefix + '${{ steps.version.outputs.version }}' + archive.suffix),
                data: fs.readFileSync(archive.prefix + '${{ steps.version.outputs.version }}' + archive.suffix),
                headers: {
                  'X-GitHub-Api-Version': '2022-11-28',
                  'content-type': archive['mime-type']
                }
              });
              console.log('Uploading old-' + archive.prefix + '${{ steps.version.outputs.version }}' + archive.suffix);
              await github.rest.repos.uploadReleaseAsset({
                owner: context.repo.owner,
                repo: context.repo.repo,
                url: release.data.upload_url,
                name: 'old-' + archive.prefix + '${{ steps.version.outputs.version }}' + archive.suffix,
                #file: fs.readFileSync("./core/build/libs/" + archive.prefix + '${{ steps.version.outputs.version }}' + archive.suffix),
                file: fs.readFileSync(archive.prefix + '${{ steps.version.outputs.version }}' + archive.suffix),
                headers: {
                  'X-GitHub-Api-Version': '2022-11-28',
                    'content-type': archive['mime-type']
                },
              });
            }
