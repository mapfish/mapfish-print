apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'

defaultTasks 'build'

repositories {
    mavenCentral()
    maven { url "https://jaspersoft.jfrog.io/jaspersoft/third-party-ce-artifacts" }
    maven { url "https://repo.osgeo.org/repository/release/" }
}

dependencies {
    compile project(':core')
    compile "org.codehaus.groovy:groovy-all:3.0.15",
            "org.springframework:spring-test:5.3.25",
            'org.ccil.cowan.tagsoup:tagsoup:1.2.1',
            'com.samskivert:jmustache:1.15'
}

def site = new File(buildDir, "site").path

task copyJavadocs(type: Copy) {
    dependsOn ':core:javadoc'
    from project(':core').tasks.javadoc.destinationDir
    into new File(site, 'javadoc')
}

task copySite(type: Copy) {
    from(sourceSets.main.output.resourcesDir) {
        exclude 'pages.json', 'templates/*', 'templates'
    }
    from(project(':core').webAppDir) {
        include 'favicon.ico', 'mapfish_transparent.png'
    }

    into site
}

task('buildDocs', type: JavaExec) {
    dependsOn compileGroovy
    dependsOn copyJavadocs
    dependsOn copySite

    main = 'GenerateDocs'
    classpath = sourceSets.main.runtimeClasspath

    def javadocs = project(':core').tasks.javadoc.destinationDir
    def basicAppContext = 'classpath*:mapfish-spring-application-context.xml'
    def appContext = project(':core').projectDir.toURI().toString() + '/jettyRunExtraFiles/*.xml'
    def appContext2 = project(':core').webAppDir.toURI().toString() + '/WEB-INF/mapfish-print-servlet.xml'
    def overrideAppContext = 'classpath*:mapfish-spring-application-context-override.xml'
    args site, javadocs, basicAppContext, appContext, appContext2, overrideAppContext
    systemProperty 'path_to_examples', "${project(':examples').projectDir}/src/test/resources/examples"
}

build {
    dependsOn buildDocs
}
