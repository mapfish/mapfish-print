<?xml version="1.0" encoding="UTF-8" ?>
<beans
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    default-lazy-init="true"
    xmlns="http://www.springframework.org/schema/beans"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"
>
    <!-- Use hibernate instead of the registry to store the job queue. configure the data source as well  -->
    <bean id="jobQueue" class="org.mapfish.print.servlet.job.impl.hibernate.HibernateJobQueue" />
    <bean id="mfDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="org.postgresql.Driver" />
        <property name="jdbcUrl" value="jdbc:postgresql://${db.host}:${db.port}/${db.name}" />
        <property name="user" value="${db.username}" />
        <property name="password" value="${db.password}" />
        <property name="minPoolSize" value="1" />
        <property name="numHelperThreads" value="1" />
        <property name="maxIdleTime" value="30" />
    </bean>

    <!-- Force the job manager the support clustering, by not taking submitted jobs automatically as its own.
         This mode requires the hibernate job queue, the registry job queue is unsupported.
         oldFileCleanUp should be turned off if hibernate is used for print job results (see below)  -->
    <bean class="org.springframework.beans.factory.config.PropertyOverrideConfigurer">
        <property name="ignoreResourceNotFound" value="true" />
        <property name="properties">
            <props>
                <prop key="jobManager.clustered">true</prop>
                <prop key="jobManager.oldFileCleanUp">false</prop>
            </props>
        </property>
    </bean>

    <!-- Use hibernate to read and write print job results  -->
    <bean
        id="printJobPrototype"
        class="org.mapfish.print.servlet.job.impl.hibernate.HibernatePrintJob"
        scope="prototype"
    />
    <bean id="fileReportLoader" class="org.mapfish.print.servlet.job.impl.hibernate.HibernateReportLoader" />
    <bean id="accounting" class="org.mapfish.print.servlet.job.HibernateAccounting" lazy-init="false" />
</beans>
